{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Documentos/GitKraken/noticias/src/hooks/useSelect.js\";\nimport React, { useState } from 'react';\n\nconst useSelect = (stateInicial, opciones) => {\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectNoticias = () => /*#__PURE__*/React.createElement(\"select\", {\n    className: \"browser-default\",\n    value: state,\n    onChange: e => actualizarState(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, opciones.map(opcion => /*#__PURE__*/React.createElement(\"option\", {\n    key: opcion.value,\n    value: opcion.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, opcion.label)));\n\n  return [state, SelectNoticias];\n};\n\nexport default useSelect;","map":{"version":3,"sources":["/home/usuario/Documentos/GitKraken/noticias/src/hooks/useSelect.js"],"names":["React","useState","useSelect","stateInicial","opciones","state","actualizarState","SelectNoticias","e","target","value","map","opcion","label"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAcC,QAAd,KAA2B;AAEzC,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BL,QAAQ,CAACE,YAAD,CAAzC;;AAEA,QAAMI,cAAc,GAAG,mBAEnB;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,KAAK,EAAEF,KAFX;AAGI,IAAA,QAAQ,EAAEG,CAAC,IAAIF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKN,QAAQ,CAACO,GAAT,CAAaC,MAAM,iBAChB;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACF,KAApB;AAA2B,IAAA,KAAK,EAAEE,MAAM,CAACF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDE,MAAM,CAACC,KAAxD,CADH,CALL,CAFJ;;AAcA,SAAO,CAACR,KAAD,EAAOE,cAAP,CAAP;AACH,CAnBD;;AAqBA,eAAeL,SAAf","sourcesContent":["import React,{useState} from 'react';\n\nconst useSelect = (stateInicial,opciones) => {\n    \n    const [state, actualizarState] = useState(stateInicial);  \n    \n    const SelectNoticias = () => (\n\n        <select \n            className=\"browser-default\"\n            value={state}\n            onChange={e => actualizarState(e.target.value)}\n        >\n            {opciones.map(opcion => (\n                <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\n            ))}\n        </select>    \n\n    );\n    \n    return [state,SelectNoticias];\n}\n \nexport default useSelect;\n"]},"metadata":{},"sourceType":"module"}